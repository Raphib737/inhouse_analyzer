{"ast":null,"code":"import _classCallCheck from \"/Users/raphaelbaysa/Desktop/league_inhouse/inhouse_analyzer/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/raphaelbaysa/Desktop/league_inhouse/inhouse_analyzer/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/raphaelbaysa/Desktop/league_inhouse/inhouse_analyzer/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/raphaelbaysa/Desktop/league_inhouse/inhouse_analyzer/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/raphaelbaysa/Desktop/league_inhouse/inhouse_analyzer/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/raphaelbaysa/Desktop/league_inhouse/inhouse_analyzer/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/raphaelbaysa/Desktop/league_inhouse/inhouse_analyzer/client/src/components/TeamGenerator.js\";\nimport '../App.css';\nimport React, { Component } from 'react';\n\nvar TeamGenerator =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TeamGenerator, _Component);\n\n  function TeamGenerator(props) {\n    var _this;\n\n    _classCallCheck(this, TeamGenerator);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TeamGenerator).call(this));\n    _this.state = {\n      blueTeam: [],\n      redTeam: [],\n      players: [],\n      player: '',\n      rRate: '',\n      bRate: ''\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.deletePlayer = _this.deletePlayer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.randomSplit = _this.randomSplit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.winRateSplit = _this.winRateSplit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(TeamGenerator, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        player: event.target.value\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      event.preventDefault();\n      var ps = this.state.players,\n          d = {},\n          summs = this.props.data['summoners']['sorted_summoners'],\n          p = this.state.player;\n\n      for (var i in summs) {\n        if (summs[i].toLowerCase() == this.state.player.toLowerCase()) {\n          p = summs[i];\n        }\n      }\n\n      ps.indexOf(p) === -1 ? ps.push(p) : console.log('duplicate value');\n      d['players'] = ps;\n      d['player'] = '';\n      this.setState(d);\n    }\n  }, {\n    key: \"deletePlayer\",\n    value: function deletePlayer(e) {\n      var summ = e.target.value,\n          newState = this.state.players;\n\n      for (var i in newState) {\n        if (newState[i] == summ) {\n          newState.splice(i, 1);\n        }\n      }\n\n      this.setState({\n        'players': newState\n      });\n    }\n  }, {\n    key: \"randomSplit\",\n    value: function randomSplit(e) {\n      var d = this.props.data;\n      d = d['summoners'];\n      var ps = this.state.players.slice(),\n          teams = {\n        'blueTeam': [],\n        'redTeam': [],\n        rRate: 0,\n        bRate: 0\n      };\n\n      for (var i = 0; i < 1000; i++) {\n        this.shuffle(ps);\n      }\n\n      var half = Math.ceil(ps.length / 2);\n      var numRates = 0;\n\n      for (var i = 0; i < half; i++) {\n        teams['blueTeam'].push(ps[i]);\n\n        if (d[ps[i]]) {\n          teams['bRate'] += parseFloat(d[ps[i]]['win rate'].slice(0, -1));\n          numRates += 1;\n        }\n      }\n\n      teams['bRate'] = (teams['bRate'] / numRates).toFixed(2);\n      numRates = 0;\n\n      for (var i = half; i < ps.length; i++) {\n        teams['redTeam'].push(ps[i]);\n\n        if (d[ps[i]]) {\n          teams['rRate'] += parseFloat(d[ps[i]]['win rate'].slice(0, -1));\n          numRates += 1;\n        }\n      }\n\n      teams['rRate'] = (teams['rRate'] / numRates).toFixed(2);\n      this.setState(teams);\n    }\n  }, {\n    key: \"winRateSplit\",\n    value: function winRateSplit(e) {\n      console.log('Split algorithm');\n      var d = this.props.data,\n          rankedTeam = [],\n          unrankedTeam = [];\n      d = d['summoners'];\n      var ps = this.state.players.slice(),\n          teams = {\n        'blueTeam': [],\n        'redTeam': [],\n        rRate: 0,\n        bRate: 0\n      };\n\n      for (var i in d['summoners']['sorted summoners']) {\n        for (var j in ps) {\n          if (d['summoners']['sorted summoners'] === ps[j]) {\n            rankedTeam.push();\n          }\n        }\n      }\n    }\n  }, {\n    key: \"shuffle\",\n    value: function shuffle(array) {\n      for (var i = array.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var _ref = [array[j], array[i]];\n        array[i] = _ref[0];\n        array[j] = _ref[1];\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var d = this.props.data;\n\n      if (typeof d == 'object') {\n        d = d['summoners'];\n        var playersCon = [];\n\n        for (var i in this.state.players) {\n          playersCon.push(React.createElement(\"div\", {\n            className: \"GplayerCont\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122\n            },\n            __self: this\n          }, parseInt(i) + 1, \".) \", this.state.players[i], React.createElement(\"button\", {\n            onClick: this.deletePlayer,\n            value: this.state.players[i],\n            className: \"GdeleteButton\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            },\n            __self: this\n          }, \"x\")));\n        }\n\n        var bt = this.state.blueTeam,\n            rt = this.state.redTeam,\n            btContainer = [],\n            rtContainer = [];\n\n        for (var i in bt) {\n          var tWin = '';\n\n          if (d[bt[i]]) {\n            tWin = d[bt[i]]['win rate'];\n          }\n\n          btContainer.push(React.createElement(\"div\", {\n            className: \"GpickedTeam\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 137\n            },\n            __self: this\n          }, \" \", bt[i], \"(\", tWin, \") \"));\n        }\n\n        for (var k in rt) {\n          var tWin = '';\n\n          if (d[rt[k]]) {\n            tWin = d[rt[k]]['win rate'];\n          }\n\n          rtContainer.push(React.createElement(\"div\", {\n            className: \"GpickedTeam\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 145\n            },\n            __self: this\n          }, rt[k], \" (\", tWin, \")\"));\n        }\n      }\n\n      return React.createElement(\"div\", {\n        className: \"dataContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"GformInput\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Add Summoner\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"summonerName\",\n        onChange: this.handleChange,\n        value: this.state.player,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Add\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"Gplayers\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, playersCon), React.createElement(\"div\", {\n        className: \"Gbuttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \" \", React.createElement(\"button\", {\n        onClick: this.randomSplit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"COMPLETELY RANDOM SPLIT\"), React.createElement(\"button\", {\n        onClick: this.winRateSplit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"WIN RATE SPLIT\"))), React.createElement(\"div\", {\n        className: \"Gteam Gblue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Gheader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Blue Team (Average Win rate:\", this.state.bRate, \"%)\"), btContainer), React.createElement(\"div\", {\n        className: \"Gteam\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Gheader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Red Team (Average Win rate:\", this.state.rRate, \"%)\"), rtContainer));\n    }\n  }]);\n\n  return TeamGenerator;\n}(Component);\n\nexport default TeamGenerator;","map":{"version":3,"sources":["/Users/raphaelbaysa/Desktop/league_inhouse/inhouse_analyzer/client/src/components/TeamGenerator.js"],"names":["React","Component","TeamGenerator","props","state","blueTeam","redTeam","players","player","rRate","bRate","handleSubmit","bind","handleChange","deletePlayer","randomSplit","winRateSplit","event","setState","target","value","preventDefault","ps","d","summs","data","p","i","toLowerCase","indexOf","push","console","log","e","summ","newState","splice","slice","teams","shuffle","half","Math","ceil","length","numRates","parseFloat","toFixed","rankedTeam","unrankedTeam","j","array","floor","random","playersCon","parseInt","bt","rt","btContainer","rtContainer","tWin","k"],"mappings":"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","sourcesContent":["import '../App.css';\n\nimport React, {Component} from 'react';\n\n\nclass TeamGenerator extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      blueTeam: [],\n      redTeam: [],\n      players: [],\n      player: '',\n      rRate: '',\n      bRate: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.deletePlayer = this.deletePlayer.bind(this);\n    this.randomSplit = this.randomSplit.bind(this);\n    this.winRateSplit = this.winRateSplit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({player: event.target.value});\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n    var ps = this.state.players, d = {},\n      summs = this.props.data['summoners']['sorted_summoners'],\n      p = this.state.player;\n    for(var i in summs) {\n      if(summs[i].toLowerCase() == this.state.player.toLowerCase()) {\n        p = summs[i]\n      }\n    }\n    ps.indexOf(p) === -1 ? ps.push(p) : console.log('duplicate value');\n\n    d['players'] = ps;\n    d['player'] = '';\n    this.setState(d)\n  }\n\n  deletePlayer(e) {\n    var summ = e.target.value, newState = this.state.players;\n    for(var i in newState) {\n      if(newState[i] == summ) {\n        newState.splice(i, 1);\n      }\n    }\n    this.setState({'players': newState})\n  }\n\n  randomSplit(e) {\n    let d = this.props.data;\n    d = d['summoners'];\n\n    var ps = this.state.players.slice(),\n      teams = {'blueTeam': [], 'redTeam': [], rRate: 0, bRate: 0};\n    for(var i = 0;i < 1000;i++) {\n      this.shuffle(ps)\n    }\n    var half = Math.ceil(ps.length / 2);\n    var numRates = 0\n\n    for(var i = 0;i < half;i++) {\n      teams['blueTeam'].push(ps[i])\n      if(d[ps[i]]) {\n        teams['bRate'] += parseFloat(d[ps[i]]['win rate'].slice(0, -1))\n        numRates += 1\n      }\n    }\n\n    teams['bRate'] = (teams['bRate'] / numRates).toFixed(2)\n\n    numRates = 0;\n    for(var i = half;i < ps.length;i++) {\n      teams['redTeam'].push(ps[i])\n      if(d[ps[i]]) {\n        teams['rRate'] += parseFloat(d[ps[i]]['win rate'].slice(0, -1))\n        numRates += 1\n      }\n    }\n\n    teams['rRate'] = (teams['rRate'] / numRates)\n      .toFixed(2)\n\n    this.setState(teams);\n  }\n\n  winRateSplit(e) {\n    console.log('Split algorithm');\n    let d = this.props.data, rankedTeam = [], unrankedTeam = [];\n    d = d['summoners'];\n\n    var ps = this.state.players.slice(), teams = {'blueTeam': [], 'redTeam': [], rRate: 0, bRate: 0};\n\n    for(var i in d['summoners']['sorted summoners'])\n      for(var j in ps) {\n        if(d['summoners']['sorted summoners'] === ps[j]) {\n          rankedTeam.push()\n        }\n\n      }\n\n\n  }\n\n  shuffle(array) {\n    for(let i = array.length - 1;i > 0;i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  }\n  render() {\n    let d = this.props.data;\n    if(typeof (d) == 'object') {\n      d = d['summoners'];\n\n      var playersCon = [];\n      for(var i in this.state.players) {\n        playersCon.push(<div className='GplayerCont'>{parseInt(i) + 1}.) {\n          this.state.players[i]\n        }<button onClick={this.deletePlayer} value={this.state.players[i]} className='GdeleteButton'>x</button></div>);\n      }\n\n      var bt = this.state.blueTeam, rt = this.state.redTeam, btContainer = [],\n        rtContainer = [];\n\n\n      for(var i in bt) {\n        var tWin = '';\n        if(d[bt[i]]) {\n          tWin = d[bt[i]]['win rate']\n        }\n        btContainer.push(\n          <div className='GpickedTeam'> {bt[i]}({tWin}) </div >)\n      }\n\n      for(var k in rt) {\n        var tWin = '';\n        if(d[rt[k]]) {\n          tWin = d[rt[k]]['win rate']\n        }\n        rtContainer.push(<div className='GpickedTeam'>{rt[k]} ({tWin})</div >)\n      }\n    }\n\n    return (\n      <div className='dataContainer'>\n        <div className='GformInput'>\n          <form onSubmit={this.handleSubmit}><label>Add Summoner<br></br>\n            <input type='summonerName' onChange={this.handleChange} value={this.state.player} /></label><br></br><input type='submit' value='Add' />\n          </form>\n          <div className='Gplayers'>{playersCon}</div>\n          <div className='Gbuttons'> <button onClick={this.randomSplit}>COMPLETELY RANDOM SPLIT</button>\n            <button onClick={this.winRateSplit}>WIN RATE SPLIT</button>\n          </div></div>\n        <div className='Gteam Gblue'>\n          <div className='Gheader'>Blue Team (Average Win rate:\n            {this.state.bRate}%)</div>{btContainer}</div>\n        <div className='Gteam'>\n          <div className='Gheader'>Red Team (Average Win rate:\n             {this.state.rRate}%)\n             </div>{rtContainer}</div></div>)\n  }\n}\n\nexport default TeamGenerator;"]},"metadata":{},"sourceType":"module"}