{"ast":null,"code":"import _classCallCheck from \"/Users/raphaelbaysa/Desktop/league_inhouse/inhouse_analyzer/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/raphaelbaysa/Desktop/league_inhouse/inhouse_analyzer/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/raphaelbaysa/Desktop/league_inhouse/inhouse_analyzer/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/raphaelbaysa/Desktop/league_inhouse/inhouse_analyzer/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/raphaelbaysa/Desktop/league_inhouse/inhouse_analyzer/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/raphaelbaysa/Desktop/league_inhouse/inhouse_analyzer/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/raphaelbaysa/Desktop/league_inhouse/inhouse_analyzer/client/src/components/TeamGenerator.js\";\nimport '../App.css';\nimport React, { Component } from 'react';\n\nvar TeamGenerator =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TeamGenerator, _Component);\n\n  function TeamGenerator(props) {\n    var _this;\n\n    _classCallCheck(this, TeamGenerator);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TeamGenerator).call(this));\n    _this.state = {\n      blueTeam: [],\n      redTeam: [],\n      players: [],\n      player: ''\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.deletePlayer = _this.deletePlayer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.randomSplit = _this.randomSplit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.winRateSplit = _this.winRateSplit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(TeamGenerator, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        player: event.target.value\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      event.preventDefault();\n      var ps = this.state.players,\n          d = {},\n          summs = this.props.data['summoners']['sorted_summoners'],\n          p = this.state.player;\n\n      for (var i in summs) {\n        if (summs[i].toLowerCase() == this.state.player.toLowerCase()) {\n          p = summs[i];\n        }\n      }\n\n      ps.indexOf(this.state.player) === -1 ? ps.push(p) : console.log('duplicate value');\n      d['players'] = ps;\n      d['player'] = '';\n      this.setState(d);\n    }\n  }, {\n    key: \"deletePlayer\",\n    value: function deletePlayer(e) {\n      var summ = e.target.value,\n          newState = this.state.players;\n\n      for (var i in newState) {\n        if (newState[i] == summ) {\n          newState.splice(i, 1);\n        }\n      }\n\n      this.setState({\n        'players': newState\n      });\n    }\n  }, {\n    key: \"randomSplit\",\n    value: function randomSplit(e) {\n      console.log('Random');\n      var ps = this.state.players;\n      print(ps);\n\n      for (var i = 0; i < 1000; i++) {\n        shuffle(ps);\n      }\n\n      console.log(ps);\n    }\n  }, {\n    key: \"winRateSplit\",\n    value: function winRateSplit(e) {\n      console.log('Split algorithm');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var d = this.props.data;\n\n      if (typeof d == 'object') {\n        d = d['summoners'];\n        var playersCon = [];\n\n        for (var i in this.state.players) {\n          var winRate = '';\n\n          if (d[this.state.players[i]]) {\n            winRate = d[this.state.players[i]]['win rate'];\n          }\n\n          playersCon.push(React.createElement(\"div\", {\n            className: \"GplayerCont\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            },\n            __self: this\n          }, parseInt(i) + 1, \".) \", this.state.players[i], \" (Win rate: \", winRate, \")\", React.createElement(\"button\", {\n            onClick: this.deletePlayer,\n            value: this.state.players[i],\n            className: \"GdeleteButton\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, \"x\")));\n        }\n      }\n\n      return React.createElement(\"div\", {\n        className: \"dataContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"GformInput\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Add Summoner\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"summonerName\",\n        onChange: this.handleChange,\n        value: this.state.player,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Add\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"Gplayers\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, playersCon), React.createElement(\"div\", {\n        className: \"Gbuttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.randomSplit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"COMPLETELY RANDOM SPLIT\"), React.createElement(\"button\", {\n        onClick: this.winRateSplit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"WIN RATE SPLIT\"))), React.createElement(\"div\", {\n        className: \"Gteam Gblue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Gheader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Blue Team\")), React.createElement(\"div\", {\n        className: \"Gteam\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Gheader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Red Team\")));\n    }\n  }]);\n\n  return TeamGenerator;\n}(Component);\n\nexport default TeamGenerator;","map":{"version":3,"sources":["/Users/raphaelbaysa/Desktop/league_inhouse/inhouse_analyzer/client/src/components/TeamGenerator.js"],"names":["React","Component","TeamGenerator","props","state","blueTeam","redTeam","players","player","handleSubmit","bind","handleChange","deletePlayer","randomSplit","winRateSplit","event","setState","target","value","preventDefault","ps","d","summs","data","p","i","toLowerCase","indexOf","push","console","log","e","summ","newState","splice","print","shuffle","playersCon","winRate","parseInt"],"mappings":"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","sourcesContent":["import '../App.css';\n\nimport React, {Component} from 'react';\n\n\nclass TeamGenerator extends Component {\n  constructor(props) {\n    super();\n    this.state = {blueTeam: [], redTeam: [], players: [], player: ''};\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.deletePlayer = this.deletePlayer.bind(this);\n    this.randomSplit = this.randomSplit.bind(this);\n    this.winRateSplit = this.winRateSplit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({player: event.target.value});\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n    var ps = this.state.players, d = {},\n        summs = this.props.data['summoners']['sorted_summoners'],\n        p = this.state.player;\n    for (var i in summs) {\n      if (summs[i].toLowerCase() == this.state.player.toLowerCase()) {\n        p = summs[i]\n      }\n    }\n    ps.indexOf(this.state.player) === -1 ? ps.push(p) :\n                                           console.log('duplicate value');\n\n    d['players'] = ps;\n    d['player'] = '';\n    this.setState(d)\n  }\n\n  deletePlayer(e) {\n    var summ = e.target.value, newState = this.state.players;\n    for (var i in newState) {\n      if (newState[i] == summ) {\n        newState.splice(i, 1);\n      }\n    }\n    this.setState({'players': newState})\n  }\n\n  randomSplit(e) {\n    console.log('Random');\n    var ps = this.state.players;\n    print(ps)\n    for (var i = 0; i < 1000; i++) {\n      shuffle(ps)\n    }\n    console.log(ps)\n  }\n\n  winRateSplit(e) {\n    console.log('Split algorithm');\n  }\n\n  render() {\n    let d = this.props.data;\n\n    if (typeof (d) == 'object') {\n      d = d['summoners'];\n\n      var playersCon = [];\n      for (var i in this.state.players) {\n        var winRate = '';\n        if (d[this.state.players[i]]) {\n          winRate = d[this.state.players[i]]['win rate']\n        }\n        playersCon.push(<div className = 'GplayerCont'>{parseInt(i) + 1}.) {\n          this.state.players[i]\n        } (Win rate: {winRate})<button onClick={this.deletePlayer} value={this.state.players[i]}className = 'GdeleteButton'>x</button></div>);\n      }\n    }\n\n    return (\n        <div className = 'dataContainer'><div className = 'GformInput'>\n        <form onSubmit = {this.handleSubmit}><label>Add Summoner<br>\n        </br>\n        <input type = 'summonerName' onChange={\n      this.handleChange} value={\n      this.state.player}/>\n        </label> <br></br><input type = 'submit' value = 'Add' />\n        </form><div className = 'Gplayers'>{\n            playersCon}</div>\n        <div className = 'Gbuttons'><button onClick={this.randomSplit}>COMPLETELY RANDOM SPLIT</button>\n        <button onClick={this.winRateSplit}>WIN RATE SPLIT</button>\n        </div>\n        </div><div className = 'Gteam Gblue'>\n        <div className = 'Gheader'>Blue Team</div>\n        </div>\n        <div className = 'Gteam'>\n        <div className = 'Gheader'>Red Team</div>\n        </div><\n        /div>)\n  }\n}\n\nexport default TeamGenerator;"]},"metadata":{},"sourceType":"module"}